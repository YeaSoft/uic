#!/bin/bash
#
# (c) 2012-2014 YeaSoft Int'l - Leo Moll
#
# Version 20140508
# This script attaches a partition or directory to a
# unified installation environment

#####################################
# script initialization

# load function library
source /usr/share/yea/uicutils.sh || exit 1

# load user customized configuration data
[ -f /etc/uic.conf ] &&	source /etc/uic.conf

#####################################
# variables section

# initialize runtime variables
FORCE=0
MOUNT_SOURCE=
MOUNT_PARAMS=

#####################################
# function section

function usage {
	cat <<EOF
usage: ${SCRIPTNAME} [-hv] [-p <mount params>] <device|dir> [<environment name>]

Options:
 -p, --mount-params           full set of parameters to pass to the mount
                              command
 -v, --verbose                increase verbosity
(-h) --help                   show this help (-h works with no other options)

This script attaches a partition or directory to the specified unified
installation environment so that all subsequent creation and customization
operations occur in the attached partition or directory.

<environment name> can be omitted if the command is launched from within the
environment directory. Otherwise it can be:

- an absolute path to the intended environment directory (e.g.: /home/kp/alix)
- a path to the intended environment directory relative to the current dir
- a path to the intended environment directory relative to /usr/src

EOF
}

#####################################
# script section

# Parameter parsing
PARSER=$(getopt --name "${SCRIPTNAME}" --options h,v,p: --longoptions help,verbose,mount-params: -- "$@")
test_getopt
eval set -- "${PARSER}"
while true; do
	case "$1" in
	-p|--mount-params)		MOUNT_PARAMS="$2"; shift 2;;
	-h|--help)			show_name; echo; usage; exit 1;;
	-v|--verbose)			(( VERBOSE++ )); shift;;
	--)				shift; break;;
        *)				echo "${SCRIPTNAME}: $1: unknown option"; show_error "syntax or usage error (code 1)"; exit 1;;
        esac
done

# configuration checking
case "${VERBOSE}" in
0)	;;
1)	show_name;;
*)	show_name;;
esac

# get the mount source
MOUNT_SOURCE="$1"
shift
if [ "${MOUNT_SOURCE}" = "" ]; then
	show_error "Missing mount device or mount directory"
	exit 3
fi

# check if we have all that we need
test_prereq

# preflights checks and destination detection
find_environment $1
verify_environment $1

# check if the environment has already been attached
if grep "${TARGET}/chroot " /proc/mounts > /dev/null; then
	show_error "Installation environment already attached"
	exit 3
fi

show_verbose 1 "Attaching ${MOUNT_SOURCE} to the environment..."
mkdir -p "${TARGET}/chroot"
mount $MOUNT_PARAMS "${MOUNT_SOURCE}" "${TARGET}/chroot"
test_exec mount mount $MOUNT_PARAMS "${MOUNT_SOURCE}" "${TARGET}/chroot"

